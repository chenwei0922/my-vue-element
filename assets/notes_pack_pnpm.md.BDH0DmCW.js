import{_ as e,o as p,c as o,af as t}from"./chunks/framework.BQjydDc4.js";const g=JSON.parse('{"title":"PNPM","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"notes/pack/pnpm.md","filePath":"notes/pack/pnpm.md","lastUpdated":1715246384000}'),a={name:"notes/pack/pnpm.md"},c=t('<h1 id="pnpm" tabindex="-1">PNPM <a class="header-anchor" href="#pnpm" aria-label="Permalink to &quot;PNPM&quot;">​</a></h1><p><a href="https://pnpm.io/cli/rebuild" target="_blank" rel="noreferrer">PNPM API</a></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p><code>npm install -g pnpm</code> | <code>brew install pnpm</code></p><blockquote><p>如果您不使用独立脚本来安装 <code>pnpm</code>，那么您需要在您的系统上安装 <code>Node.js</code>（至少 <code>v14</code>）。</p></blockquote><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><ul><li><p><code>-C &lt;path&gt;, --dir &lt;path&gt;</code> 在指定<code>path</code>中启动pnpm</p></li><li><p><code>-w, --workspace-root</code> 在根目录中启动<code>pnpm</code></p></li><li><p><code>-F &lt;package_selector&gt;, --filter &lt;package_selector&gt;</code> 选择一个软件包</p></li><li><p><code>--filter=!&lt;package_selector&gt;</code> 排除某个包</p></li><li><p><code>-D</code> 保存到<code>devDependencies</code></p></li><li><p><code>--save-peer</code> 依赖保存到<code>peerDependencies</code></p></li><li><p><code>pnpm init</code> 初始化</p></li><li><p><code>pnpm install</code> 安装</p></li><li><p><code>pnpm add &lt;pkg&gt;</code> 安装库</p></li><li><p><code>pnpm add &lt;pkg&gt; -w</code> 根目录安装依赖</p></li><li><p><code>pnpm add &lt;pkg&gt; -r</code> 所有子项目安装依赖</p></li><li><p><code>pnpm add &lt;pkg&gt; -r --filter &lt;package_name&gt;</code> 指定子项目安装依赖</p></li></ul>',7),d=[c];function l(i,n,r,s,m,_){return p(),o("div",null,d)}const k=e(a,[["render",l]]);export{g as __pageData,k as default};
